<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Intialization
plyr1 = obj_player;

//viewing
view_dist = 250;
see_ply = false;
fov_deg = 90;


_hp = 10;
damage = 5;

///Basic Initialization
depth = -y;

dirdir = 0;
directEn = 0;

//Your verticle speed
vsp = 0;
//Your horrozontal speed
hsp = 0;

facing = 0;


hit = 0

ran = 0;

alr = room_speed*2;

alr2 = -1

spd = 2;


deg = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement

if(ran &gt; 0 &amp;&amp; ran &lt;= 1)
{
  hsp = spd;
}
if(ran &gt; 1 &amp;&amp; ran &lt;= 2)
{
  vsp = -spd;
}
if(ran &gt; 2 &amp;&amp; ran &lt;= 3)
{
  hsp = -spd;
}
if(ran &gt; 3 &amp;&amp; ran &lt;= 4)
{
  vsp = spd;
}

//Walk, while alarm 1 ticks down;
if(alr &gt;= 0)
{
  alr -= 1;
}
//Stop moving when alarm 1 ends
if(alr == 0 || see_ply)
{ 
  vsp = 0;
  hsp = 0;
  ran = -1;
  alr2 = room_speed;
}

if(alr2 &gt;= 0)
{
  alr2 -= 1;
}

if(alr2 == 0)
{
  ran = random_range(0, 4);
  alr = (room_speed);
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collisions

//Horizontal Collision
if (place_meeting(x+hsp,y,par_wall) || !place_free(x+hsp,y) || !(x+hsp+sprite_width/2 &gt; 0) || !(x+hsp-sprite_width/2 &lt; room_width))
{
    hsp = 0; 
}
//Vertical collisions
if (place_meeting(x,y+vsp,par_wall) || !place_free(x,y+vsp) || !(y+vsp+sprite_height/2 &gt; 0) || !(y+vsp-sprite_height/2 &lt; room_height))
{
    vsp = 0; 
}

//Reactionary collision
if (place_meeting(x+hspeed,y,par_wall))
{
    hspeed = 0; 
    dirdir = -1;
}
if (place_meeting(x,y+vspeed,par_wall))
{
    vspeed = 0; 
    dirdir = -1;
}

if(hsp == 0 &amp;&amp; vsp&lt;0)
{  facing = 0; hface = 0; vface = -1; }
if(hsp &gt; 0 &amp;&amp; vsp&lt;0)
{  facing = 1; hface = 1; vface = -1;  }
if(hsp&gt;0 &amp;&amp; vsp == 0)
{  facing = 2; hface = 1; vface = 0;  }
if(hsp&gt;0 &amp;&amp; vsp&gt;0)
{  facing = 3; hface = 1; vface = 1;  }
if(hsp==0 &amp;&amp; vsp&gt;0)
{  facing = 4; hface = 0; vface = 1;  }
if(hsp&lt;0 &amp;&amp; vsp&gt;0)
{  facing = 5; hface = -1; vface = 1;  }
if(hsp &lt; 0 &amp;&amp; vsp == 0)
{  facing = 6; hface = -1; vface = 0;  }
if(hsp&lt;0 &amp;&amp; vsp&lt;0)
{  facing = 7; hface = -1; vface = -1;  }

if(vsp == 0 &amp;&amp; hsp == 0)
{
    switch(facing)
    {
      case 0:   hface = 0; vface = -1; deg = 90; break;
      case 2:   hface = 1; vface = 0;  deg = 0;break;
      case 4:   hface = 0; vface = 1;  deg = 270; break;
      case 6:   hface = -1; vface = 0; deg = 180; break;
    }
}

//Commit to movement
x += (hsp/room_speed*60);
y += (vsp/room_speed*60);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Viewfinding
if(scr_fov(deg,fov_deg,view_dist,plyr1.x,plyr1.y))
{
  see_ply = true;
}
else if(distance_to_object(plyr1) &gt; view_dist)
{ 
  see_ply = false;
}

if(see_ply)
{
  mp_potential_step(plyr1.x,plyr1.y,spd*2,0);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Weapon Collision
if(hit &gt; 0)
{  
  //Health - the damage from the weapon that hit it
  (instance_create(x,y-sprite_height,obj_effect_damage)).text=string(hit);
  health_cur -= hit;
  hit = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text_colour(10, 10,"Random move num: "+ string(ran), c_green, c_green, c_green, c_green, 1);
draw_text_colour(10, 25, "Can see a player? "+string(see_ply), c_green, c_green, c_green, c_green,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
